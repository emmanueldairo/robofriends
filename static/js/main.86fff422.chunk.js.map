{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA4BH,EAA5B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EAtBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZS,SCEZC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAY,MAAjB,SACE,uBACEA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCTI,G,MAPA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,aCgBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKJ,MAAMC,UAAW,I,oBAG1B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAhBCO,aC4CZC,E,kDAvCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAZzC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAC1B,OAAQkC,S,oBAM1C,WAAS,IAAD,EAC0Bb,KAAKJ,MAA5BjB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKG,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUmC,WAP/B,6C,GAvBKb,aCMHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.86fff422.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({name, email, id}) =>{\n    \n    return(\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt ='robots' src = {`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\nexport default Card","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    // if (true) {\n    //     throw new Error('Nooooo')\n    // }\n    return(\n        <div>\n            {\n            robots.map((user, i) => {\n                return (\n                    <Card \n                    key = {i} \n                    id = {robots[i].id}\n                    name = {robots[i].name} \n                    email = {robots[i].email}\n                    />\n                )\n         })\n    }\n        </div>\n    )\n}\n\nexport default CardList","import React from 'react'\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className = 'pa2'>\n          <input\n            className = 'pa3 ba b--green bg-lightest-blue'\n            type = 'search' \n            placeholder = 'search robots'\n            onChange = {searchChange}\n           />\n        </div>\n    )\n}\n\nexport default SearchBox","import React from \"react\";\n\n\nconst Scroll = (props) => {\n    return(\n        <div style = {{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.state.hasError = true\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport \"./app.css\";\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield:''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots: users}))\n        \n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n    render(){\n        const {robots, searchfield} = this.state\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })   \n        return !robots.length?\n             <h1>Loading</h1>:\n        (\n            <div className ='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange = {this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots = {filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        )\n       \n    \n    }\n    \n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}